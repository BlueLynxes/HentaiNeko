// This json will be minified (important that it doesn not contain newlines)
// and saved into the "comment" metadata tag using exiftool (or similar)

// Jsons with comments can be used with two caveats: comment can only be "//",
// comments can only be in an otherwise empty line, for example:
// `"properties" // comment` <- will remove the whole line and currupt the json

// this is essentiall what the software ends up doing to clean the file and minify it:
// `cat properties-template.json | grep -v "//" | jq -c`

// Almost all properties can be null

// The extent on which properties can be used is up to the individual user, the user decides
// the level of control and information to be given to a specific picture.
// Generally speaking, the more details, the better. This is due to the fact that broad matches
// can be enabled to include matches that are not 100% correct, the tolerance can also be chose from the user.
// There is no standard set of properties, however, it is generally recommended to take some time
// to fill in the specific proprerties for each picture, obviously, not all properties have to be filled in.
// Not all pictures will require many informations. Thos tags can be applied to videos thanks to the "actions"
// properties of each character.
{
    // The scene type tag indicates a collection of tags that best represent what the scen looks like
    // for example, a portait would be just a character in front, however a sex tag could indicate
    // sex, which is possible both in a portrait and other senes.
    "sceneType": [
        "portrait"
    ],
    // Indicates setting properties ex: day/night, location, etc
    "setting": {
        "locationProperties": [
            //"outdoor",
            //"snow",
            "indoor"
        ],
        "locationItems": [
            "bed"
        ],
        // sunrise, day, sunset, night
        "time": "",
        // winter, spring, summer, fall
        "season": "",
        "light": "white/bright"
    },
    // Genres indicates the overall genres that can be applied to a picture, however this tags should be
    // used with caution, genres should not include character specific tags such as "catgirl" or "pantyhose"
    // instead it should indicate overall scene general tags such as "beach" or "bdsm"
    "genres": [
    ],
    // A set of general tags, which can contain inherited tags, which work exactly like sub properties, for example:
    // "humancow" is just a humancow, "humancow/milking" is the humancow being milked
    // Or another example "bdsm" is a generic bdsm scene, "bdsm/bondage" implies bondage "bdsm/bondage/latex" implies bondage and latex
    "tags": [
        "bunny-girl",
        "big-tits",
        "tits-dangling"
    ],
    // This is the most important collection of tags which includes the fine grained information which will
    // then allow the powerful search engine to find what you're looking for.
    // The complexity is broken down into multiple levels.
    // Of course, a picture can contain many character, therefore each has it's own properties
    "characters": [
        {
            "generalInfo": {
                "brand": "",
                // Note: characters may be identified by multiple names using "&"
                // Ex: traveler&lumine
                "characterName": "",
                "gender": "female",
                // Stuff like bunny-girl&milf
                "type": "bunny-girl&milf"
            },
            "bodyDescription": {
                // The skin tone description contains {color}/{shade}
                // For example white/dark is a darker shade of white
                // white/light is a pale shade of white
                "skinTone": "white/light",
                "weight": "thin",
                "hairColor": "blode/light",
                "hairStyle": "long/straight",
                // NOTE: This whole eye thing may need to be re done better
                // Color of the individual eyes from left to right
                // Use & to specify the colors (can go over 2)
                "eyeColor": "blue&blue",
                // Eye properties, multiple/properties&per/eye
                "eyeProperties": "",
                // These are all the extra body stuff, such as "cat ears"
                "bodyModifications": [
                ],
                // Add the body parts with relevant data here, no need to have separate male and female sections
                "bodyProportions": {
                    //"breast/left": "mid-large",
                    //"breast/right": "mid-large",
                    "breasts": "mid-large"
                }
            },
            "clothingDescription": {
                // Standard outfit types such as maiden, office, student, bikini, naked, underwear etc
                // In case the outfit has a subtype, for example student/sailor style or winter/summer etc
                // Or swimsuit two pieces/one piece etc just write a subtag "swimsuit/two-pieces"
                // Blend of outfits can be specified via a "&" so for example "school/sailor&battle-suit"
                "outfitType": "bunny-girl",
                // A collection of all the used accessories that are not necessarily included in the
                // outfit type and subtype, for example a visible bra or pantyhose
                // Accessories can also have a set of subtypes after a "/", for example:
                // "pantyhose/pull/down" indicates a character with pantyhose being pulled and already down,
                // "pantyhose/pull" would only indicate the pantyhose being pulled, but not down yet
                "accessories": [
                    // indicates the character pulling the dress, still not lifted
                    "fake-ears/bunny",
                    "fake-tail/bunny"
                ],
                // Dev Note:
                // Still considering wether it makes sense to have two different sections for accessories and
                // clothing items. They are different, but is it necessary to specify it?
                "clothingItems": [
                    "pantyhose"
                ],
                // Determines the bisibility of a body part:
                // covered, visible, see-through, out-of-frame, partial, hidden
                // Covered is for body parts covered by clothing
                // Visible is for fully exposed body parts
                // see-through is for body parts covered by a see thru object (ex: thin clothing)
                // out-of-frame is for body parts that are out of frame
                // partial is for body parts that are partially visible
                // hidden is for body parts hidden behind object, other characters or other body parts
                "bodyPartsExposure": {
                    "breast/right": "visible",
                    "breast/left": "visible",
                    "genitalia": "hidden",
                    // broad matches should be able to find similar tags, for example
                    // with broad matches on the tag "LEG/right" would also match "LEGs"
                    "legs": "see-through"
                },
                // A percentage to indicate how much skin is visible for the character
                // It's not a precise percentage, just an average estimate
                "bodyExposureRate": 60
            },
            // A collection of general accessories with which the character is interacting, for example a phone
            // Accessories can also have subproperties, for example "phone/selfie" indicates that the character is
            // using a phone for a selfie
            "accessories": [
            ],
            // A set of properties regarding the character position, this means, bent, spreading or even stuff like
            // tied up, lying down, standing.
            "bodyPosition": [
                // Indicates the gawn is being pulled but not yet lifted
                "bending",
                "sitting"
            ],
            // Self explanatory, a collection of tags representing the character expressions, aheago, smiling, blinking etc
            "facialExpressions": [
                // Subproperties can be used to indicate a specific nuance of an expression, for example "smiling/pervert" and
                // "smiling/happy" are two different expressions, or "laughing/fun" and "laughing/nervous" are different
                "smiling/pervest",
                "licking-lips"
            ],
            // Actions being done or being done to the character for example "hitting" or "getting-hit", can be empty if there is
            // no specific action being done
            // Can also indicate the character actions toward it's own clothing, for example, pulling her gawn
            "actions": [
                // For example here the character would be casting a spell without the wand accessory
            ]
        }
    ]
}